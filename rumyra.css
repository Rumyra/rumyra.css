@charset "UTF-8";
/* http://meyerweb.com/eric/tools/css/reset/
   v2.0 | 20110126
   License: none (public domain)
	As per edited Ruth John 2019
	Includes picks from https://hankchizljaw.com/wrote/a-modern-css-reset/
*/
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

input,
button,
textarea,
select {
  font: inherit;
}

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}

/* genuinely I use this more than I don't */
ol, ul {
  list-style: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after,
q:before, q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

strong, b {
  font-weight: bold;
}

em, i {
  font-style: italic;
}

sup, sub {
  font-size: 0.85em;
  position: relative;
}

sup {
  top: -0.25em;
}

sub {
  bottom: -0.25em;
}

code {
  font-family: monospace;
}

/* This is important, if you're thinking about removing it, don't */
:focus, :focus-visible {
  outline: 2px solid #666;
}

:focus:not(:focus-visible) {
  outline: none;
}

/* Remove all animations and transitions for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
  /* We are relaxing the `declaration-no-important` here
     because we want to ensure that code further down the
     cascade will adhere to this accessibility enhancement */
  /* stylelint-disable declaration-no-important */
  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
/* reset browser styles */
:root {
  --black: hsla(315, 3%, 15%, 1);
  --brown: hsla(315, 3%, 25%, 1);
  --cream: hsla(33, 55%, 94%, 1);
  --white: hsla(60, 33%, 99%, 1);
  --purple: hsla(273, 36%, 59%, 1);
  --pink: hsla(346, 63%, 59%, 1);
  --orange: hsla(5, 74%, 62%, 1);
  --yellow: hsla(38, 86%, 67%, 1);
  --green: hsla(131, 30%, 58%, 1);
  --blue: hsla(179, 38%, 53%, 1);
  /* abstract colours -> all components use prim or sec, change it per component in situ */
  --primCol: var(--purple);
  --secCol: var(--green);
  /* darks & lights - although I will use black & white in use */
  --darkest: var(--black);
  --dark: var(--brown);
  --light: var(--cream);
  --lightest: var(--white);
}

/* colour vars + branding abstraction */
:root {
  --size: 1.1rem;
  /* use for gutters, vertical spacing & fonts */
  --gutter: var(--size);
  --verticalSpace: var(--size);
  /* abstract for use */
  --xGap: var(--gutter);
  --xHalfGap: calc(var(--gutter)/2);
  --xDoubleGap: calc(var(--gutter)*2);
  --yGap: var(--verticalSpace);
  --yHalfGap: calc(var(--verticalSpace)/2);
  --yDoubleGap: calc(var(--verticalSpace)*2);
  --smallScreen: 420px;
  --mediumScreem: 650px;
  --wideScreen: 1200px;
  --xwideScreen: 2000px;
  /* 2.52, 2.33, 2.15, 2, 1.85, 1.7, 1.58, 1.47, 1.36, 1.26, 1.16, 0.92, 0.85 -> golden ratio */
  --fontSize: var(--size);
  --largeHeaderSize: calc(var(--fontSize)*2.33);
  --mediumHeaderSize: calc(var(--fontSize)*1.47);
  --smallHeaderSize: calc(var(--fontSize)*1);
  --largeFontSize: var(--mediumHeaderSize);
  --smallFontSize: calc(var(--fontSize)*0.85);
}

/* unit vars */
@font-face {
  font-family: "Sans";
  src: url("fonts/HurmeGeometricSans3.otf") format("opentype");
}
@font-face {
  font-family: "Sans";
  font-style: italic;
  src: url("fonts/HurmeGeometricSans3Oblique.otf") format("opentype");
}
@font-face {
  font-family: "Sans";
  font-weight: bold;
  src: url("fonts/HurmeGeometricSans3SemiBold.otf") format("opentype");
}
@font-face {
  font-family: "Sans";
  font-style: italic;
  font-weight: bold;
  src: url("fonts/HurmeGeometricSans3SemiBoldOblique.otf") format("opentype");
}
:root {
  --font: "Sans", sans-serif;
}

/* font imports and var usage */
:root {
  font-size: 100%;
  line-height: 1;
  --borderWidth: 6px;
  --borderRadius: 2px;
  --boxShadow: 0px 0px 1px 0px var(--dark);
}

body {
  min-height: 100vh;
  scroll-behavior: smooth;
  background-color: var(--light);
  font-family: var(--font);
  font-size: var(--fontSize);
  color: var(--dark);
  letter-spacing: 1px;
  line-height: 1.3;
  text-rendering: optimizeSpeed;
}

/* I don't usually use hrs but just in case */
hr {
  overflow: visible;
  /* For IE */
  padding: 0px;
  margin: var(--yGap) 0px;
  border: none;
  border-top: 4px solid var(--primCol);
  color: var(--primCol);
  text-align: center;
}

hr:after {
  content: "• • • • • • • • •";
  display: inline-block;
  position: relative;
  top: -0.5em;
  font-size: 1.5em;
  line-height: 1;
  padding: 0 0.25em;
  background: var(--light);
}

/* body, wrapper + a few style custom props */
/* typography */
/* ============================== HEADERS */
[class*=heading], h1, h2, h3, h4, h5, h6 {
  margin: var(--yGap) 0px;
  font-weight: bold;
  text-transform: uppercase;
}

.heading--large, h1 {
  font-size: var(--largeHeaderSize);
}

.heading--medium, h2 {
  font-size: var(--mediumHeaderSize);
}

.heading--small, h3 {
  font-size: var(--smallHeaderSize);
}

/* ======================= TEXT */
.text, p {
  margin: var(--yGap) 0px;
  font-size: var(--fontSize);
}

.text--lede {
  font-size: var(--largeFontSize);
}

.text--small {
  font-size: var(--smallFontSize);
}

/* ======================= LINKS */
.link, a {
  color: var(--primCol);
  text-decoration: none;
}

.link:hover, a:hover {
  text-decoration: underline;
}

[class*=list] {
  margin: var(--yGap) 0px;
}

.list {
  padding-left: var(--xDoubleGap);
  list-style-type: circle;
}

.list--numbered {
  padding-left: var(--xDoubleGap);
  list-style-type: upper-roman;
}

.list--desc {
  display: flow-root;
}

.list--desc dt, .list--desc dd {
  width: 50%;
  box-sizing: border-box;
  padding: var(--xHalfGap);
}

.list--desc dt {
  float: left;
  text-align: right;
}

.list--desc dd {
  float: right;
  text-align: left;
}

[class*=quote] {
  margin: var(--yGap) 0px;
}

.quote {
  margin-left: var(--xGap);
  padding: var(--yHalfGap) var(--xGap);
  border-left: var(--borderWidth) solid var(--primCol);
}

q, cite {
  display: block;
}

q::before {
  content: "‟";
}

q::after {
  content: "„";
}

cite {
  font-size: var(--smallFontSize);
  color: var(--primCol);
}

.quote--callout {
  width: 50%;
  padding: var(--yGap) var(--xGap);
  border: var(--borderWidth) solid var(--primCol);
  border-radius: var(--borderRadius);
  box-shadow: var(--boxShadow);
  background-color: var(--lightest);
}

.quote--callout q {
  font-size: var(--largeFontSize);
}

.quote--callout q::before, .quote--callout q::after {
  font-size: var(--largeHeaderSize);
  color: var(--primCol);
  line-height: 0.5;
}

/* headers, paragraphs etc... */
/* shared for all buttons */
button, [class^=btn] {
  display: inline-block;
  border: var(--borderWidth) solid var(--primCol);
  border-radius: var(--borderRadius);
  font-size: var(--fontSize);
  font-family: var(--font);
  cursor: pointer;
}

/* basic button */
button, .btn {
  padding: var(--yGap) var(--xDoubleGap);
  background: var(--primCol) none top left;
  color: var(--lightest);
}

button:hover, .btn:hover {
  background-color: var(--lightest);
  color: var(--primCol);
}

/* using secondary colour */
.btn--alt {
  background-color: var(--secCol);
  border-color: var(--secCol);
}

.btn--alt:hover {
  color: var(--secCol);
}

/* set of buttons for a one select */
.select--btns button {
  padding: var(--yHalfGap) var(--xGap);
  border-color: var(--secCol);
  background-color: var(--lightest);
  color: var(--dark);
}

.select--btns button:hover {
  border-color: var(--brown);
}

.select--btns button[data-selected=true] {
  border-color: var(--dark);
  background-color: var(--secCol);
}

/* buttons, inc select group */
/* PrismJS 1.17.1
https://prismjs.com/download.html#themes=prism-tomorrow&languages=markup+css+clike+javascript+glsl+json+scss&plugins=toolbar+show-language */
/**
 * prism.js tomorrow night eighties for JavaScript, CoffeeScript, CSS and HTML
 * Based on https://github.com/chriskempson/tomorrow-theme
 * @author Rose Pritchard
 */
code[class*=language-],
pre[class*=language-] {
  color: #ccc;
  background: none;
  font-family: Consolas, Monaco, "Andale Mono", "Ubuntu Mono", monospace;
  font-size: 1em;
  text-align: left;
  white-space: pre;
  word-spacing: normal;
  word-break: normal;
  word-wrap: normal;
  line-height: 1.5;
  -moz-tab-size: 4;
  -o-tab-size: 4;
  tab-size: 4;
  -webkit-hyphens: none;
  -moz-hyphens: none;
  -ms-hyphens: none;
  hyphens: none;
}

/* Code blocks */
pre[class*=language-] {
  padding: 1em;
  margin: 0.5em 0;
  overflow: auto;
}

:not(pre) > code[class*=language-],
pre[class*=language-] {
  background: #2d2d2d;
}

/* Inline code */
:not(pre) > code[class*=language-] {
  padding: 0.1em;
  border-radius: 0.3em;
  white-space: normal;
}

.token.comment,
.token.block-comment,
.token.prolog,
.token.doctype,
.token.cdata {
  color: #999;
}

.token.punctuation {
  color: #ccc;
}

.token.tag,
.token.attr-name,
.token.namespace,
.token.deleted {
  color: #e2777a;
}

.token.function-name {
  color: #6196cc;
}

.token.boolean,
.token.number,
.token.function {
  color: #f08d49;
}

.token.property,
.token.class-name,
.token.constant,
.token.symbol {
  color: #f8c555;
}

.token.selector,
.token.important,
.token.atrule,
.token.keyword,
.token.builtin {
  color: #cc99cd;
}

.token.string,
.token.char,
.token.attr-value,
.token.regex,
.token.variable {
  color: #7ec699;
}

.token.operator,
.token.entity,
.token.url {
  color: #67cdcc;
}

.token.important,
.token.bold {
  font-weight: bold;
}

.token.italic {
  font-style: italic;
}

.token.entity {
  cursor: help;
}

.token.inserted {
  color: green;
}

div.code-toolbar {
  position: relative;
}

div.code-toolbar > .toolbar {
  position: absolute;
  top: 0.3em;
  right: 0.2em;
  transition: opacity 0.3s ease-in-out;
  opacity: 0;
}

div.code-toolbar:hover > .toolbar {
  opacity: 1;
}

/* Separate line b/c rules are thrown out if selector is invalid.
   IE11 and old Edge versions don't support :focus-within. */
div.code-toolbar:focus-within > .toolbar {
  opacity: 1;
}

div.code-toolbar > .toolbar .toolbar-item {
  display: inline-block;
}

div.code-toolbar > .toolbar a {
  cursor: pointer;
}

div.code-toolbar > .toolbar button {
  background: none;
  border: 0;
  color: inherit;
  font: inherit;
  line-height: normal;
  overflow: visible;
  padding: 0;
  -webkit-user-select: none;
  /* for button */
  -moz-user-select: none;
  -ms-user-select: none;
}

div.code-toolbar > .toolbar a,
div.code-toolbar > .toolbar button,
div.code-toolbar > .toolbar span {
  color: #bbb;
  font-size: 0.8em;
  padding: 0 0.5em;
  background: #f5f2f0;
  background: rgba(224, 224, 224, 0.2);
  box-shadow: 0 2px 0 0 rgba(0, 0, 0, 0.2);
  border-radius: 0.5em;
}

div.code-toolbar > .toolbar a:hover,
div.code-toolbar > .toolbar a:focus,
div.code-toolbar > .toolbar button:hover,
div.code-toolbar > .toolbar button:focus,
div.code-toolbar > .toolbar span:hover,
div.code-toolbar > .toolbar span:focus {
  color: inherit;
  text-decoration: none;
}

.code, pre[class*=language-] {
  padding: var(--yGap) var(--xGap);
  box-sizing: border-box;
  border: var(--borderWidth) solid var(--primCol);
  border-radius: var(--borderRadius);
  background-color: var(--dark);
  color: var(--lightest);
  overflow-wrap: break-word;
  white-space: pre-wrap;
}

.code code, pre[class*=language-] code {
  overflow-wrap: break-word;
  white-space: pre-wrap;
}

/* code blocks inc prism */
img {
  display: block;
  height: 100%;
  width: 100%;
  border-radius: var(--borderRadius);
  object-fit: cover;
}

/*there are figure elements*/
[class*=image--] {
  position: relative;
  height: 30vw;
  width: 50vw;
  margin: var(--yGap) 0px;
  border: var(--borderWidth) solid var(--primCol);
  border-radius: var(--borderRadius);
  box-shadow: var(--boxShadow);
}

[class*=image--] figcaption {
  position: absolute;
  bottom: 0px;
  right: 0px;
  padding: var(--yGap) var(--xGap);
  background-color: var(--light);
}

.image--feature {
  height: 40vw;
  width: 100%;
}

/* images, video, audio */
.paint--large {
  background-image: paint(largeBackground);
}

.paint--small {
  background-image: paint(smallBackground);
}

.paint__header--one {
  background-image: paint(headerBackground);
  padding: var(--yGap) 0px;
}

.paint__header--two {
  background-image: paint(headerBackgroundTwo);
  padding: var(--yGap) 0px;
}

.paint__callout {
  background-image: paint(calloutBackground);
  padding: calc(var(--yGap)*2) calc(var(--xGap)*2);
  border: 1px solid var(--col1);
}

.paint__bullet {
  background-image: paint(bulletBackground);
  padding: var(--yGap) 0px var(--yGap) calc(var(--xGap)*2);
}

.paint__cta {
  display: inline-block;
  background-image: paint(ctaBackground);
  padding: calc(var(--yGap)*2) calc(var(--xGap)*4);
  border: 1px solid var(--col1);
}

.paint__cta--block {
  display: inline-block;
  background-image: paint(ctaBackground);
  padding: calc(var(--yGap)*2) calc(var(--xGap)*4);
  border: 1px solid var(--col1);
}

/* paint functions */
.github-corner svg {
  fill: var(--primCol);
  color: var(--light);
  position: absolute;
  top: 0;
  right: 0;
  border: 0;
}

.github-corner:hover .octo-arm {
  animation: octocat-wave 560ms ease-in-out;
}

@keyframes octocat-wave {
  0%, 100% {
    transform: rotate(0);
  }
  20%, 60% {
    transform: rotate(-25deg);
  }
  40%, 80% {
    transform: rotate(10deg);
  }
}
@media (max-width: 500px) {
  .github-corner:hover .octo-arm {
    animation: none;
  }

  .github-corner .octo-arm {
    animation: octocat-wave 560ms ease-in-out;
  }
}
/* paint functions */
/* basic top site nav */
.site__nav ul {
  display: flex;
  justify-content: space-evenly;
  align-items: center;
  margin-bottom: var(--yDoubleGap);
  padding: var(--yGap) 0px;
  border-bottom: var(--borderWidth) solid var(--dark);
}

.site__nav li {
  font-size: var(--largeFontSize);
}

.site__nav a {
  color: var(--dark);
}

.site__nav a:hover {
  color: var(--primCol);
}

/* socials */
.social-links {
  display: flex;
  justify-content: center;
  flex-wrap: wrap;
}

.social-links li a {
  padding: 0px;
  border: none;
}

.social-links li a svg {
  width: auto;
  height: 64px;
  padding: var(--yHalfGap) var(--xHalfGap);
  box-sizing: border-box;
  background-color: var(--light);
  border-radius: var(--borderRadius);
}

.social-links li a svg path {
  fill: var(--dark);
}

.social-links li a:hover svg path {
  fill: var(--primCol);
}

.footer-site {
  display: flex;
  justify-content: space-evenly;
  align-items: center;
  margin-top: var(--yDoubleGap);
  padding: var(--yGap) 0px;
  border-top: var(--borderWidth) solid var(--dark);
}

/* paint functions */
.wrapper {
  max-width: 990px;
  margin: 0px auto;
}

/* paint functions */
/* remove this */
#colours i {
  display: inline-block;
  width: 30px;
  height: 30px;
}

#colours i:nth-of-type(1) {
  background-color: var(--purple);
}

#colours i:nth-of-type(2) {
  background-color: var(--pink);
}

#colours i:nth-of-type(3) {
  background-color: var(--orange);
}

#colours i:nth-of-type(4) {
  background-color: var(--yellow);
}

#colours i:nth-of-type(5) {
  background-color: var(--green);
}

#colours i:nth-of-type(6) {
  background-color: var(--blue);
}

#colours i:nth-of-type(7) {
  background-color: var(--darkest);
}

#colours i:nth-of-type(8) {
  background-color: var(--dark);
}

#colours i:nth-of-type(9) {
  background-color: var(--light);
}

#colours i:nth-of-type(10) {
  background-color: var(--lightest);
}

/* show colours at top */
body {
  padding: 2vh;
}

.paint .paint--large {
  width: 70vw;
  min-height: 50vh;
  padding: 2vw;
}

.paint .paint--small {
  width: 30vw;
}

.paint .paint__header--one {
  width: 50vw;
}

.paint .paint__header--two {
  width: 50vw;
}

.paint .paint__callout {
  width: 50vw;
}

/* styles for the styleguide */

/*# sourceMappingURL=rumyra.css.map */
